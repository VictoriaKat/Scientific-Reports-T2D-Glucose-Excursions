library(dplyr)
library(pwr)
install.packages("pwr")
# Load necessary libraries
library(dplyr)
library(pwr)
# Step 1: Simulate HbA1c data for non-prediabetic and prediabetic individuals
set.seed(123) # For reproducibility
# Parameters
n_total <- 1000  # Total number of individuals
mean_non_prediabetic <- 5.4  # Mean HbA1c for non-prediabetic
sd_non_prediabetic <- 0.3  # Standard deviation for non-prediabetic
mean_prediabetic <- 5.9  # Mean HbA1c for prediabetic
sd_prediabetic <- 0.3  # Standard deviation for prediabetic
# Simulate non-prediabetic group
n_non_prediabetic <- 700  # Number of non-prediabetic individuals
hba1c_non_prediabetic <- rnorm(n_non_prediabetic, mean = mean_non_prediabetic, sd = sd_non_prediabetic)
# Simulate prediabetic group
n_prediabetic <- 300  # Number of prediabetic individuals
hba1c_prediabetic <- rnorm(n_prediabetic, mean = mean_prediabetic, sd = sd_prediabetic)
# Combine the data
hba1c_values <- c(hba1c_non_prediabetic, hba1c_prediabetic)
status <- c(rep(0, n_non_prediabetic), rep(1, n_prediabetic))  # 0 = non-prediabetic, 1 = prediabetic
# Create a data frame
data <- data.frame(HbA1c = hba1c_values, Status = status)
# Step 2: Fit a logistic regression model
model <- glm(Status ~ HbA1c, data = data, family = binomial)
# Summary of the model
summary(model)
# Calculate the effect size (Cohen's d) based on mean difference and pooled SD
mean_diff <- mean_prediabetic - mean_non_prediabetic
pooled_sd <- sqrt(((sd_non_prediabetic^2 * (n_non_prediabetic - 1)) +
(sd_prediabetic^2 * (n_prediabetic - 1))) /
(n_non_prediabetic + n_prediabetic - 2))
effect_size <- mean_diff / pooled_sd
# Power analysis for logistic regression using effect size and alpha = 0.05
alpha <- 0.05
power <- 0.8
# Calculate sample size
sample_size <- pwr.p.test(h = effect_size, sig.level = alpha, power = power)$n
# Print sample size estimate
cat("Estimated sample size required for 80% power:", ceiling(sample_size), "\n")
sample_size
mean_diff
model
# Summary of the model
summary(model)
166*0.9
# Step 1: Simulate HbA1c data for non-prediabetic and prediabetic individuals
set.seed(123) # For reproducibility
# Parameters
n_total <- 166  # Total number of individuals
mean_non_prediabetic <- 5.4  # Mean HbA1c for non-prediabetic
sd_non_prediabetic <- 0.3  # Standard deviation for non-prediabetic
mean_prediabetic <- 5.9  # Mean HbA1c for prediabetic
sd_prediabetic <- 0.3  # Standard deviation for prediabetic
# Simulate non-prediabetic group
n_non_prediabetic <- 149  # Number of non-prediabetic individuals
hba1c_non_prediabetic <- rnorm(n_non_prediabetic, mean = mean_non_prediabetic, sd = sd_non_prediabetic)
# Simulate prediabetic group
n_prediabetic <- n_total-n_non_prediabetic   # Number of prediabetic individuals
hba1c_prediabetic <- rnorm(n_prediabetic, mean = mean_prediabetic, sd = sd_prediabetic)
# Combine the data
hba1c_values <- c(hba1c_non_prediabetic, hba1c_prediabetic)
status <- c(rep(0, n_non_prediabetic), rep(1, n_prediabetic))  # 0 = non-prediabetic, 1 = prediabetic
# Create a data frame
data <- data.frame(HbA1c = hba1c_values, Status = status)
# Step 2: Fit a logistic regression model
model <- glm(Status ~ HbA1c, data = data, family = binomial)
# Summary of the model
summary(model)
data
n_prediabetic
### XGBoost Clusters 18.04.2024 ###############
library(dplyr)
library(xgboost)
library(dplyr)
library(xgboost)
cores <- detectCores()
registerDoParallel(cores)
set.seed(12345)
library(registerDoParallel)
library(cores)
## Data--------------------------------------
postprandial_df <- read.csv("../../Data_Analysis/Data/Postprandial_05.csv")
cluster_df <- read.csv("../../Data_Analysis/Data/data_cluster.csv")
data <- merge(postprandial_df, cluster_df, by = "ID")
data
X_train
